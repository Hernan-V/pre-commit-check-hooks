- id: check-trailing-whitespace
  name: Check for trailing whitespace (check only)
  entry: bash -c 'if grep -n "[[:space:]]\+$" "$@"; then echo "Trailing whitespace found!"; exit 1; fi' --
  language: system
  types: [text]

- id: check-end-of-file
  name: Check for end-of-file newline (check only)
  entry: bash -c 'for f in "$@"; do if [ -n "$(tail -c1 "$f" 2>/dev/null)" ]; then echo "Missing EOF newline!"; exit 1; fi; done' --
  language: system
  types: [text]

- id: check-mixed-line-ending
  name: Check for mixed line endings (check only)
  entry: bash -c 'if file "$@" | grep -q CRLF; then echo "Mixed line endings found!"; exit 1; fi' --
  language: system
  types: [text]

- id: check-byte-order-marker
  name: Check for BOM (check only)
  entry: bash -c 'if grep -q $"\xEF\xBB\xBF" "$@"; then echo "BOM found!"; exit 1; fi' --
  language: system
  types: [text]

- id: validate-schema
  name: Validate Database Schema (Multi-Dialect)
  description: Validates database schema files for compliance with RDBMS dialects and naming conventions
  entry: validate-schema
  language: python
  types: [json]
  require_serial: true
  additional_dependencies: [case-converter]

- id: setup-configs
  name: Download shared config files
  description: Downloads shared configuration files from remote repository to cache directory
  entry: sh
  language: system
  pass_filenames: false
  args:
    - -c
    - |
      # Set default environment variables
      export PRE_COMMIT_HOOK_CACHE_DIRECTORY="${PRE_COMMIT_HOOK_CACHE_DIRECTORY:-.git/.pre-commit-config-cache}"
      export PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL="${PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL:-https://raw.githubusercontent.com/Hernan-V/pre-commit-check-hooks/main}"
      
      # Override cache directory if it exists (clean everything inside)
      if [ -d "$PRE_COMMIT_HOOK_CACHE_DIRECTORY" ]; then
        echo "Cleaning existing cache directory: $PRE_COMMIT_HOOK_CACHE_DIRECTORY"
        rm -rf "$PRE_COMMIT_HOOK_CACHE_DIRECTORY"/*
      fi
      
      # Create cache directory
      mkdir -p "$PRE_COMMIT_HOOK_CACHE_DIRECTORY"
      
      # Download config files to cache directory
      echo "Downloading config files to $PRE_COMMIT_HOOK_CACHE_DIRECTORY"
      curl -s "$PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL/.sqlfluff_bigquery" > "$PRE_COMMIT_HOOK_CACHE_DIRECTORY/.sqlfluff_bigquery"
      curl -s "$PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL/.isort.cfg" > "$PRE_COMMIT_HOOK_CACHE_DIRECTORY/.isort.cfg"
      
      echo "Config files cached in $PRE_COMMIT_HOOK_CACHE_DIRECTORY"

- id: test-config
  name: Create .envrc with environment variables
  description: Creates .envrc file with exported environment variables for development use
  entry: sh
  language: system
  pass_filenames: false
  args:
    - -c
    - |
      # Set environment variables using the wrapper pattern recommended by pre-commit maintainers
      export PRE_COMMIT_HOOK_CACHE_DIRECTORY="${PRE_COMMIT_HOOK_CACHE_DIRECTORY:-.git/.pre-commit-config-cache}"
      export PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL="${PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL:-https://raw.githubusercontent.com/Hernan-V/pre-commit-check-hooks/main}"
      
      # Create .envrc file for development use
      cat > .envrc << EOF
# Pre-commit hooks environment variables
# Generated by test-config hook on $(date)
export PRE_COMMIT_HOOK_CACHE_DIRECTORY="$PRE_COMMIT_HOOK_CACHE_DIRECTORY"
export PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL="$PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL"

echo "Pre-commit hooks environment loaded:"
echo "  Cache: \$PRE_COMMIT_HOOK_CACHE_DIRECTORY"
echo "  URL: \$PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL"
EOF
      
      echo "âœ“ Created .envrc file with environment variables"
      echo "  PRE_COMMIT_HOOK_CACHE_DIRECTORY=$PRE_COMMIT_HOOK_CACHE_DIRECTORY"
      echo "  PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL=$PRE_COMMIT_HOOK_DOWNLOAD_BASE_URL"
